<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
	<PropertyGroup>
		<RootDir Condition="'$(RootDir)'==''">$(MSBuildProjectDirectory)/..</RootDir>
		<Solution>DigitaleBriefwahl.sln</Solution>
		<SolutionPath>$(RootDir)/$(Solution)</SolutionPath>
		<ApplicationName>DigitaleBriefwahl</ApplicationName>
		<Configuration Condition="'$(Configuration)'==''">Release</Configuration>
		<useNUnit-x86 Condition="'$(OS)'=='Windows_NT'">true</useNUnit-x86>
		<useNUnit-x86 Condition="'$(OS)'!='Windows_NT'">false</useNUnit-x86>
		<NuGetPackageDir>$(RootDir)/packages</NuGetPackageDir>

		<RestartBuild Condition="!Exists('$(NuGetPackageDir)/SIL.BuildTasks/tools/SIL.BuildTasks.dll')">true</RestartBuild>
		<RestartBuild Condition="Exists('$(NuGetPackageDir)/SIL.BuildTasks/tools/SIL.BuildTasks.dll')">false</RestartBuild>
	</PropertyGroup>

	<UsingTask TaskName="SIL.BuildTasks.UnitTestTasks.NUnit3"
		AssemblyFile="$(NuGetPackageDir)/SIL.BuildTasks/tools/SIL.BuildTasks.dll"
		Condition="Exists('$(NuGetPackageDir)/SIL.BuildTasks/tools/SIL.BuildTasks.dll')" />

	<Import Project="NuGet.targets"/>

	<Target Name="RestoreBuildTasks" DependsOnTargets="CheckPrerequisites">
		<Message Text="RestartBuild=$(RestartBuild)"/>
		<Message Text="MSBuildProjectDirectory=$(MSBuildProjectDirectory)"/>
		<Exec Command='$(NuGetCommand) install SIL.BuildTasks -excludeVersion -version 2.2.0 -source "$(PackageSources)" -solutionDirectory "$(RootDir)"' />
	</Target>

	<Target Name="Build">
		<CallTarget Targets="RestoreBuildTasks"/>
		<CallTarget Targets="BuildInternal" Condition="!$(RestartBuild)" />
		<MSBuild Projects="$(MSBuildProjectFullPath)" Targets="BuildInternal" Properties="Configuration=$(Configuration);RootDir=$(RootDir)" Condition="$(RestartBuild)" />
	</Target>

	<Target Name="BuildInternal">
		<CallTarget Targets="Clean"/>
		<CallTarget Targets="Compile"/>
		<Message Text="Build Complete"/>
	</Target>

	<ItemGroup>
		<ExistingObjectFiles
			Include="$(RootDir)/output/$(Configuration)/**/*"
			Exclude="$(RootDir)/.git/**/*"
		/>
	</ItemGroup>

	<Target Name="Clean">
		<Delete Files="@(ExistingObjectFiles)" />
		<Delete Condition="'$(OS)'=='Windows_NT' OR $(MSBuildToolsVersion) &gt;= 15"
			 Files="$(RootDir)/**/obj/**/*" />
		<Exec Condition="'$(OS)'!='Windows_NT' AND $(MSBuildToolsVersion) &lt; 15"
			Command="find . %5c( -name obj -o -name bin -o -name test-results %5c) -type d -print0 | xargs -0 rm -rf"
			WorkingDirectory="$(RootDir)" />
		<Delete Files="build/LfMerge.files" />
	</Target>

	<Target Name="DownloadDependencies" DependsOnTargets="RestorePackages"/>

	<Target Name="PrepareSource" DependsOnTargets="DownloadDependencies;RestorePackages">
		<!-- This target gets called before building the source package -->
		<RemoveDir Directories="$(RootDir)/Downloads"/>
	</Target>

	<Target Name="Compile" DependsOnTargets="DownloadDependencies;RestorePackages">
		<CallTarget Targets="CompileOnly"/>
	</Target>

	<Target Name="CompileOnly">
		<!-- This target gets called during binary package build and shouldn't download
			anything -->
		<MSBuild
			Projects="$(SolutionPath)"
			Targets="Build"
			Properties="Configuration=$(Configuration)" />
	</Target>

	<Target Name="Test" DependsOnTargets="Build">
		<CallTarget Targets="TestOnly" Condition="!$(RestartBuild)" />
		<MSBuild Projects="$(MSBuildProjectFullPath)" Targets="TestOnly"
			Properties="Configuration=$(Configuration);RootDir=$(RootDir)"
			Condition="$(RestartBuild)" />
	</Target>

	<Target Name="TestOnly">
		<ItemGroup>
			<TestAssemblies
				Include="$(RootDir)/DigitaleBriefwahlTests/bin/$(Configuration)/net461/*Tests.dll"/>
		</ItemGroup>

		<SIL.BuildTasks.UnitTestTasks.NUnit3 Assemblies="@(TestAssemblies)"
			ToolPath="$(RootDir)/packages/NUnit.ConsoleRunner.3.8.0/tools"
			WorkingDirectory="$(RootDir)/output/$(Configuration)"
			Force32Bit="$(useNUnit-x86)"
			Verbose="true"
			UseNUnit3Xml="true"
			Teamcity="$('$(teamcity_version)' != '')"
			OutputXmlFile="$(RootDir)/output/$(Configuration)/TestResults.xml"/>
	</Target>

	<Target Name="Sign">
		<Exec Command='sign "$(RootDir)\Releases\DigitaleBriefwahl.Launcher-*-Setup.exe"'/>
		<Message Text="Signed squirrel installer at $(RootDir)\Releases\DigitaleBriefwahl.Launcher-*-Setup.exe" Importance="high"/>
	</Target>
</Project>
